apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-tippecanoe
spec:
  schedule: "{{ .Values.schedule }}"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.backoffLimit }}
      template:
        spec:
          {{- if (eq .Values.gdal.enabled true) }}
          initContainers:
          - name: gdal
            image: {{ .Values.gdal.image.repository }}:{{ .Values.gdal.image.tag }}
            command:
            - /bin/sh
            - -c
            - '{{ .Values.gdal.commandArgs }}'
          {{- end }}
            {{- if (eq .Values.storage.enabled true) }}
            volumeMounts:
             - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
               mountPath: {{ .Values.storage.path }}
            {{- end }}
          containers:
          - name: tippecanoe
            image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - '{{ .Values.commandArgs }}'
            {{- if (eq .Values.storage.enabled true) }}
            volumeMounts:
             - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
               mountPath: {{ .Values.storage.path }}
            {{- end }}
          restartPolicy: {{ .Values.restartPolicy }}
          {{- if (eq .Values.storage.enabled true) }}
          volumes:
           - name: {{ .Release.Name }}-{{ .Chart.Name }}-data
             persistentVolumeClaim:
               claimName: {{ .Release.Name }}-{{ .Chart.Name }}
          {{- end }}